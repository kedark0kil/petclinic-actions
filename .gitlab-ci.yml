default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind


stages:
  - build
  - deploy
  - sonarqube
#  - deploy-monitoring
#  - config

build_image:
  stage: build
  tags:
    - pet
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
  script:
    - docker build -t registry.gitlab.com/kedarjayantkokil/petclinic:v1 .
    - docker push registry.gitlab.com/kedarjayantkokil/petclinic:v1

deploy_image:
  stage: deploy
  tags:
    - pet
  needs: [build_image]
  image: 
    name: bitnami/kubectl
    entrypoint: ['']
  before_script:
    - kubectl config get-contexts
    - kubectl config use-context kedarjayantkokil/petclinic:clinic1
  script:
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml

#deploy_monitoring:
#  stage: deploy-monitoring
#  image: 
#    name: alpine/helm
#    entrypoint: [''] 
#  script:
#    - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts -n monitoring
#    - helm repo update
#    - helm install moitoring prometheus-community/kube-prometheus-stack -n monitoring
#    - helm repo add sonarqube https://SonarSource.github.io/helm-chart-sonarqube
#    - helm repo update
#    - kubectl create namespace sonarqube
#    - helm upgrade --install -n sonarqube --version '~8' sonarqube sonarqube/sonarqube

#config:
#  stage: config
#  needs: [deploy_monitoring]
#  image:
#    name: bitnami/kubectl
#    entrypoint: ['']
#  script:
#    - kubectl expose service petclinic-service --type=NodePort --name=petclinic-service-ext
#    - kubectl apply -f monitoring/petclinic-ingress.yaml
#    - kubectl expose service moitoring-kube-prometheus-prometheus --type=NodePort --name=moitoring-kube-prometheus-prometheus-ext -n monitoring
#    - kubectl apply -f monitoring/prom-ingress.yaml
#    - kubectl expose service moitoring-grafana --type=NodePort --name=moitoring-grafana-ext -n monitoring
#    - kubectl apply -f monitoring/grafana-ingress.yaml
#    - kubectl expose service/sonarqube-sonarqube --type=NodePort --name=sonarqube-sonarqube-ext -n sonarqube
#    - kubectl apply -f monitoring/sonar-ingress.yaml

sonarqube-check:
  stage: sonarqube
  tags:
    - pet
  image: maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn verify sonar:sonar -Dsonar.projectKey=sonarqube
  allow_failure: true
  only:
    - main
